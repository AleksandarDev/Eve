<VisualMicro>
  <Program Name="BaseDevice" Ext=".ino" Location="C:\Users\Aleksandar\Dropbox\Documents\JustBuild Development\Projects - Software\Project - Eve\Devices\Arduino\BaseDevice">
    <Compile IsCompiled="0" CompilerErrors="0" ConfigurationName="Debug" StopOnError="False" OptimiseLibs="True" OptimiseCore="True" BuildPath="C:\Users\Aleksandar\AppData\Local\VMicro\Arduino\Builds\BaseDevice\mega2560" />
    <Platform Name="Arduino">
      <Board Name="mega2560" Description="Arduino Mega 2560 or Mega ADK" bootloader.path="stk500v2" CoreFolder="C:\Program Files\Arduino 1.5.2\hardware\arduino\avr\cores\arduino" VariantFullPath="C:\Program Files\Arduino 1.5.2\hardware\arduino\avr\variants\mega" McuIdePath="C:\Program Files\Arduino 1.5.2" name="Arduino Mega 2560 or Mega ADK" cpu="2560 or ADK" upload.tool="avrdude" upload.protocol="wiring" upload.maximum_size="258048" upload.speed="115200" bootloader.tool="avrdude" bootloader.low_fuses="0xFF" bootloader.high_fuses="0xD8" bootloader.extended_fuses="0xFD" bootloader.file="stk500v2/stk500boot_v2_mega2560.hex" bootloader.unlock_bits="0x3F" bootloader.lock_bits="0x0F" build.mcu="atmega2560" build.f_cpu="16000000L" build.core="arduino" build.variant="mega" runtime.ide.path="C:\Program Files\Arduino 1.5.2" build.system.path="C:\Program Files\Arduino 1.5.2\hardware\arduino\avr\system" software="ARDUINO" runtime.ide.version="152" compiler.c.cmd="avr-gcc" compiler.c.flags="-c -g -Os -w -ffunction-sections -fdata-sections -MMD" compiler.c.elf.flags="-Os -Wl,--gc-sections" compiler.c.elf.cmd="avr-gcc" compiler.S.flags="-c -g -assembler-with-cpp" compiler.cpp.cmd="avr-g++" compiler.cpp.flags="-c -g -Os -w -fno-exceptions -ffunction-sections -fdata-sections -MMD" compiler.ar.cmd="avr-ar" compiler.ar.flags="rcs" compiler.objcopy.cmd="avr-objcopy" compiler.objcopy.eep.flags="-O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0" compiler.elf2hex.flags="-O ihex -R .eeprom" compiler.elf2hex.cmd="avr-objcopy" compiler.ldflags="" compiler.size.cmd="avr-size" build.extra_flags="" recipe.c.o.pattern="&quot;{compiler.path}{compiler.c.cmd}&quot; {compiler.c.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -D{software}={runtime.ide.version} {build.extra_flags} {includes} &quot;{source_file}&quot; -o &quot;{object_file}&quot;" recipe.cpp.o.pattern="&quot;{compiler.path}{compiler.cpp.cmd}&quot; {compiler.cpp.flags} -mmcu={build.mcu} -DF_CPU={build.f_cpu} -D{software}={runtime.ide.version} {build.extra_flags} {includes} &quot;{source_file}&quot; -o &quot;{object_file}&quot;" recipe.ar.pattern="&quot;{compiler.path}{compiler.ar.cmd}&quot; {compiler.ar.flags} &quot;{build.path}/{archive_file}&quot; &quot;{object_file}&quot;" recipe.c.combine.pattern="&quot;{compiler.path}{compiler.c.elf.cmd}&quot; {compiler.c.elf.flags} -mmcu={build.mcu} -o &quot;{build.path}/{build.project_name}.elf&quot; {object_files} &quot;{build.path}/{archive_file}&quot; &quot;-L{build.path}&quot; -lm" recipe.objcopy.eep.pattern="&quot;{compiler.path}{compiler.objcopy.cmd}&quot; {compiler.objcopy.eep.flags} &quot;{build.path}/{build.project_name}.elf&quot; &quot;{build.path}/{build.project_name}.eep&quot;" recipe.objcopy.hex.pattern="&quot;{compiler.path}{compiler.elf2hex.cmd}&quot; {compiler.elf2hex.flags} &quot;{build.path}/{build.project_name}.elf&quot; &quot;{build.path}/{build.project_name}.hex&quot;" recipe.size.pattern="&quot;{compiler.path}{compiler.size.cmd}&quot; -A &quot;{build.path}/{build.project_name}.hex&quot;" recipe.size.regex="Total\s+([0-9]+).*" tools.avrdude.cmd.path="{runtime.ide.path}/hardware/tools/avr/bin/avrdude" tools.avrdude.config.path="{runtime.ide.path}/hardware/tools/avr/etc/avrdude.conf" tools.avrdude.cmd.path.linux="{runtime.ide.path}/hardware/tools/avrdude" tools.avrdude.config.path.linux="{runtime.ide.path}/hardware/tools/avrdude.conf" tools.avrdude.upload.params.verbose="-v -v -v -v" tools.avrdude.upload.params.quiet="-q -q" tools.avrdude.upload.pattern="&quot;{cmd.path}&quot; &quot;-C{config.path}&quot; {upload.verbose} -p{build.mcu} -c{upload.protocol} -P{serial.port} -b{upload.speed} -D &quot;-Uflash:w:{build.path}/{build.project_name}.hex:i&quot;" tools.avrdude.program.params.verbose="-v -v -v -v" tools.avrdude.program.params.quiet="-q -q" tools.avrdude.program.pattern="&quot;{cmd.path}&quot; &quot;-C{config.path}&quot; {program.verbose} -p{build.mcu} -c{protocol} {program.extra_params} &quot;-Uflash:w:{build.path}/{build.project_name}.hex:i&quot;" tools.avrdude.erase.params.verbose="-v -v -v -v" tools.avrdude.erase.params.quiet="-q -q" tools.avrdude.erase.pattern="&quot;{cmd.path}&quot; &quot;-C{config.path}&quot; {erase.verbose} -p{build.mcu} -c{protocol} {program.extra_params} -e -Ulock:w:{bootloader.unlock_bits}:m -Uefuse:w:{bootloader.extended_fuses}:m -Uhfuse:w:{bootloader.high_fuses}:m -Ulfuse:w:{bootloader.low_fuses}:m" tools.avrdude.bootloader.params.verbose="-v -v -v -v" tools.avrdude.bootloader.params.quiet="-q -q" tools.avrdude.bootloader.pattern="&quot;{cmd.path}&quot; &quot;-C{config.path}&quot; {bootloader.verbose} -p{build.mcu} -c{protocol} {program.extra_params} &quot;-Uflash:w:{runtime.ide.path}/hardware/arduino/avr/bootloaders/{bootloader.file}:i&quot; -Ulock:w:{bootloader.lock_bits}:m" build.core.vmresolved="C:\Program Files\Arduino 1.5.2\hardware\arduino\avr\cores\arduino" build.core.parentfolder.vmresolved="C:\Program Files\Arduino 1.5.2\hardware\arduino\avr\cores" build.core.coresparentfolder.vmresolved="C:\Program Files\Arduino 1.5.2\hardware\arduino\avr" vm.core.include="arduino.h" vm.boardsource.path="C:\Program Files\Arduino 1.5.2\hardware\arduino\avr" vm.boardsource.name="boards.txt" vm.platformname.name="avr" build.variant.vmresolved="C:\Program Files\Arduino 1.5.2\hardware\arduino\avr\variants\mega" compiler.path="C:\Program Files\Arduino 1.5.2\hardware\tools\avr\bin\" includes=" -I&quot;C:\Program Files\Arduino 1.5.2\hardware\arduino\avr\cores\arduino&quot;  -I&quot;C:\Program Files\Arduino 1.5.2\hardware\arduino\avr\variants\mega&quot; " build.path="C:\Users\Aleksandar\AppData\Local\VMicro\Arduino\Builds\BaseDevice\mega2560" build.project_name="BaseDevice" build.variant.path="C:\Program Files\Arduino 1.5.2\hardware\arduino\avr\variants\mega" archive_file="core.a" object_file="&quot;C:\Users\Aleksandar\AppData\Local\VMicro\Arduino\Builds\BaseDevice\mega2560\BaseDevice.cpp.o&quot;" source_file="&quot;C:\Users\Aleksandar\AppData\Local\VMicro\Arduino\Builds\BaseDevice\mega2560\BaseDevice.cpp&quot;" />
    </Platform>
    <Debug />
  </Program>
</VisualMicro>