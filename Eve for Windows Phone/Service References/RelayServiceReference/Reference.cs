//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace EveWindowsPhone.RelayServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceUser", Namespace="http://schemas.datacontract.org/2004/07/Eve.API.Services.Common")]
    public partial class ServiceUser : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool IsValidField;
        
        private string PasswordHashField;
        
        private string TokenField;
        
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsValid {
            get {
                return this.IsValidField;
            }
            set {
                if ((this.IsValidField.Equals(value) != true)) {
                    this.IsValidField = value;
                    this.RaisePropertyChanged("IsValid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PasswordHash {
            get {
                return this.PasswordHashField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordHashField, value) != true)) {
                    this.PasswordHashField = value;
                    this.RaisePropertyChanged("PasswordHash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceClient", Namespace="http://schemas.datacontract.org/2004/07/Eve.API.Services.Common")]
    public partial class ServiceClient : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AliasField;
        
        private string IDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Alias {
            get {
                return this.AliasField;
            }
            set {
                if ((object.ReferenceEquals(this.AliasField, value) != true)) {
                    this.AliasField = value;
                    this.RaisePropertyChanged("Alias");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceRequestDetails", Namespace="http://schemas.datacontract.org/2004/07/Eve.API.Services.Common")]
    public partial class ServiceRequestDetails : object, System.ComponentModel.INotifyPropertyChanged {
        
        private EveWindowsPhone.RelayServiceReference.ServiceClient ClientField;
        
        private EveWindowsPhone.RelayServiceReference.ServiceUser UserField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EveWindowsPhone.RelayServiceReference.ServiceClient Client {
            get {
                return this.ClientField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientField, value) != true)) {
                    this.ClientField = value;
                    this.RaisePropertyChanged("Client");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EveWindowsPhone.RelayServiceReference.ServiceUser User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TrackPadMessage", Namespace="http://schemas.datacontract.org/2004/07/Eve.API.Services.Common.Modules.Touch")]
    public partial class TrackPadMessage : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double AngleField;
        
        private EveWindowsPhone.RelayServiceReference.TrackPadMessage.TrackPadCommands CommandField;
        
        private EveWindowsPhone.RelayServiceReference.Orientation DirectionField;
        
        private double DistanceRatioField;
        
        private double XField;
        
        private double YField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Angle {
            get {
                return this.AngleField;
            }
            set {
                if ((this.AngleField.Equals(value) != true)) {
                    this.AngleField = value;
                    this.RaisePropertyChanged("Angle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EveWindowsPhone.RelayServiceReference.TrackPadMessage.TrackPadCommands Command {
            get {
                return this.CommandField;
            }
            set {
                if ((this.CommandField.Equals(value) != true)) {
                    this.CommandField = value;
                    this.RaisePropertyChanged("Command");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EveWindowsPhone.RelayServiceReference.Orientation Direction {
            get {
                return this.DirectionField;
            }
            set {
                if ((this.DirectionField.Equals(value) != true)) {
                    this.DirectionField = value;
                    this.RaisePropertyChanged("Direction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double DistanceRatio {
            get {
                return this.DistanceRatioField;
            }
            set {
                if ((this.DistanceRatioField.Equals(value) != true)) {
                    this.DistanceRatioField = value;
                    this.RaisePropertyChanged("DistanceRatio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double X {
            get {
                return this.XField;
            }
            set {
                if ((this.XField.Equals(value) != true)) {
                    this.XField = value;
                    this.RaisePropertyChanged("X");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Y {
            get {
                return this.YField;
            }
            set {
                if ((this.YField.Equals(value) != true)) {
                    this.YField = value;
                    this.RaisePropertyChanged("Y");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="TrackPadMessage.TrackPadCommands", Namespace="http://schemas.datacontract.org/2004/07/Eve.API.Services.Common.Modules.Touch")]
        public enum TrackPadCommands : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Tap = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Hold = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            DoubleTap = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Flick = 3,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            DragStarted = 4,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            DragDelta = 5,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            DragCompleted = 6,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            PinchStarted = 7,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            PinchDelta = 8,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            PinchCompleted = 9,
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="Orientation", Namespace="http://schemas.datacontract.org/2004/07/Eve.API.Services.Common.Modules")]
    public enum Orientation : uint {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Horizontal = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Vertical = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ButtonMessage", Namespace="http://schemas.datacontract.org/2004/07/Eve.API.Services.Common.Modules.Touch")]
    public partial class ButtonMessage : object, System.ComponentModel.INotifyPropertyChanged {
        
        private EveWindowsPhone.RelayServiceReference.ButtonMessage.Buttons ButtonField;
        
        private EveWindowsPhone.RelayServiceReference.ButtonMessage.ButtonCommands CommandField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EveWindowsPhone.RelayServiceReference.ButtonMessage.Buttons Button {
            get {
                return this.ButtonField;
            }
            set {
                if ((this.ButtonField.Equals(value) != true)) {
                    this.ButtonField = value;
                    this.RaisePropertyChanged("Button");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EveWindowsPhone.RelayServiceReference.ButtonMessage.ButtonCommands Command {
            get {
                return this.CommandField;
            }
            set {
                if ((this.CommandField.Equals(value) != true)) {
                    this.CommandField = value;
                    this.RaisePropertyChanged("Command");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.FlagsAttribute()]
        [System.Runtime.Serialization.DataContractAttribute(Name="ButtonMessage.Buttons", Namespace="http://schemas.datacontract.org/2004/07/Eve.API.Services.Common.Modules.Touch")]
        public enum Buttons : uint {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Left = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Right = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Middle = 3,
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.FlagsAttribute()]
        [System.Runtime.Serialization.DataContractAttribute(Name="ButtonMessage.ButtonCommands", Namespace="http://schemas.datacontract.org/2004/07/Eve.API.Services.Common.Modules.Touch")]
        public enum ButtonCommands : uint {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Tap = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Hold = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            DoubleTap = 4,
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RelayServiceReference.IEveAPIService")]
    public interface IEveAPIService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEveAPIService/SignIn", ReplyAction="http://tempuri.org/IEveAPIService/SignInResponse")]
        System.IAsyncResult BeginSignIn(EveWindowsPhone.RelayServiceReference.ServiceUser user, System.AsyncCallback callback, object asyncState);
        
        bool EndSignIn(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEveAPIService/SignOut", ReplyAction="http://tempuri.org/IEveAPIService/SignOutResponse")]
        System.IAsyncResult BeginSignOut(EveWindowsPhone.RelayServiceReference.ServiceUser user, System.AsyncCallback callback, object asyncState);
        
        bool EndSignOut(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEveAPIService/GetAvailableClients", ReplyAction="http://tempuri.org/IEveAPIService/GetAvailableClientsResponse")]
        System.IAsyncResult BeginGetAvailableClients(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<EveWindowsPhone.RelayServiceReference.ServiceClient> EndGetAvailableClients(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEveAPIService/SendTrackPadMessage", ReplyAction="http://tempuri.org/IEveAPIService/SendTrackPadMessageResponse")]
        System.IAsyncResult BeginSendTrackPadMessage(EveWindowsPhone.RelayServiceReference.ServiceRequestDetails details, EveWindowsPhone.RelayServiceReference.TrackPadMessage message, System.AsyncCallback callback, object asyncState);
        
        bool EndSendTrackPadMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEveAPIService/SendButtonMessage", ReplyAction="http://tempuri.org/IEveAPIService/SendButtonMessageResponse")]
        System.IAsyncResult BeginSendButtonMessage(EveWindowsPhone.RelayServiceReference.ServiceRequestDetails details, EveWindowsPhone.RelayServiceReference.ButtonMessage message, System.AsyncCallback callback, object asyncState);
        
        bool EndSendButtonMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEveAPIService/SetZoom", ReplyAction="http://tempuri.org/IEveAPIService/SetZoomResponse")]
        System.IAsyncResult BeginSetZoom(EveWindowsPhone.RelayServiceReference.ServiceRequestDetails details, int zoomValue, System.AsyncCallback callback, object asyncState);
        
        bool EndSetZoom(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEveAPIServiceChannel : EveWindowsPhone.RelayServiceReference.IEveAPIService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SignInCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SignInCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SignOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SignOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAvailableClientsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAvailableClientsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<EveWindowsPhone.RelayServiceReference.ServiceClient> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<EveWindowsPhone.RelayServiceReference.ServiceClient>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SendTrackPadMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SendTrackPadMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SendButtonMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SendButtonMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetZoomCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetZoomCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EveAPIServiceClient : System.ServiceModel.ClientBase<EveWindowsPhone.RelayServiceReference.IEveAPIService>, EveWindowsPhone.RelayServiceReference.IEveAPIService {
        
        private BeginOperationDelegate onBeginSignInDelegate;
        
        private EndOperationDelegate onEndSignInDelegate;
        
        private System.Threading.SendOrPostCallback onSignInCompletedDelegate;
        
        private BeginOperationDelegate onBeginSignOutDelegate;
        
        private EndOperationDelegate onEndSignOutDelegate;
        
        private System.Threading.SendOrPostCallback onSignOutCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAvailableClientsDelegate;
        
        private EndOperationDelegate onEndGetAvailableClientsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAvailableClientsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendTrackPadMessageDelegate;
        
        private EndOperationDelegate onEndSendTrackPadMessageDelegate;
        
        private System.Threading.SendOrPostCallback onSendTrackPadMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendButtonMessageDelegate;
        
        private EndOperationDelegate onEndSendButtonMessageDelegate;
        
        private System.Threading.SendOrPostCallback onSendButtonMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetZoomDelegate;
        
        private EndOperationDelegate onEndSetZoomDelegate;
        
        private System.Threading.SendOrPostCallback onSetZoomCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public EveAPIServiceClient() {
        }
        
        public EveAPIServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EveAPIServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EveAPIServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EveAPIServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<SignInCompletedEventArgs> SignInCompleted;
        
        public event System.EventHandler<SignOutCompletedEventArgs> SignOutCompleted;
        
        public event System.EventHandler<GetAvailableClientsCompletedEventArgs> GetAvailableClientsCompleted;
        
        public event System.EventHandler<SendTrackPadMessageCompletedEventArgs> SendTrackPadMessageCompleted;
        
        public event System.EventHandler<SendButtonMessageCompletedEventArgs> SendButtonMessageCompleted;
        
        public event System.EventHandler<SetZoomCompletedEventArgs> SetZoomCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EveWindowsPhone.RelayServiceReference.IEveAPIService.BeginSignIn(EveWindowsPhone.RelayServiceReference.ServiceUser user, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSignIn(user, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool EveWindowsPhone.RelayServiceReference.IEveAPIService.EndSignIn(System.IAsyncResult result) {
            return base.Channel.EndSignIn(result);
        }
        
        private System.IAsyncResult OnBeginSignIn(object[] inValues, System.AsyncCallback callback, object asyncState) {
            EveWindowsPhone.RelayServiceReference.ServiceUser user = ((EveWindowsPhone.RelayServiceReference.ServiceUser)(inValues[0]));
            return ((EveWindowsPhone.RelayServiceReference.IEveAPIService)(this)).BeginSignIn(user, callback, asyncState);
        }
        
        private object[] OnEndSignIn(System.IAsyncResult result) {
            bool retVal = ((EveWindowsPhone.RelayServiceReference.IEveAPIService)(this)).EndSignIn(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSignInCompleted(object state) {
            if ((this.SignInCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SignInCompleted(this, new SignInCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SignInAsync(EveWindowsPhone.RelayServiceReference.ServiceUser user) {
            this.SignInAsync(user, null);
        }
        
        public void SignInAsync(EveWindowsPhone.RelayServiceReference.ServiceUser user, object userState) {
            if ((this.onBeginSignInDelegate == null)) {
                this.onBeginSignInDelegate = new BeginOperationDelegate(this.OnBeginSignIn);
            }
            if ((this.onEndSignInDelegate == null)) {
                this.onEndSignInDelegate = new EndOperationDelegate(this.OnEndSignIn);
            }
            if ((this.onSignInCompletedDelegate == null)) {
                this.onSignInCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSignInCompleted);
            }
            base.InvokeAsync(this.onBeginSignInDelegate, new object[] {
                        user}, this.onEndSignInDelegate, this.onSignInCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EveWindowsPhone.RelayServiceReference.IEveAPIService.BeginSignOut(EveWindowsPhone.RelayServiceReference.ServiceUser user, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSignOut(user, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool EveWindowsPhone.RelayServiceReference.IEveAPIService.EndSignOut(System.IAsyncResult result) {
            return base.Channel.EndSignOut(result);
        }
        
        private System.IAsyncResult OnBeginSignOut(object[] inValues, System.AsyncCallback callback, object asyncState) {
            EveWindowsPhone.RelayServiceReference.ServiceUser user = ((EveWindowsPhone.RelayServiceReference.ServiceUser)(inValues[0]));
            return ((EveWindowsPhone.RelayServiceReference.IEveAPIService)(this)).BeginSignOut(user, callback, asyncState);
        }
        
        private object[] OnEndSignOut(System.IAsyncResult result) {
            bool retVal = ((EveWindowsPhone.RelayServiceReference.IEveAPIService)(this)).EndSignOut(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSignOutCompleted(object state) {
            if ((this.SignOutCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SignOutCompleted(this, new SignOutCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SignOutAsync(EveWindowsPhone.RelayServiceReference.ServiceUser user) {
            this.SignOutAsync(user, null);
        }
        
        public void SignOutAsync(EveWindowsPhone.RelayServiceReference.ServiceUser user, object userState) {
            if ((this.onBeginSignOutDelegate == null)) {
                this.onBeginSignOutDelegate = new BeginOperationDelegate(this.OnBeginSignOut);
            }
            if ((this.onEndSignOutDelegate == null)) {
                this.onEndSignOutDelegate = new EndOperationDelegate(this.OnEndSignOut);
            }
            if ((this.onSignOutCompletedDelegate == null)) {
                this.onSignOutCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSignOutCompleted);
            }
            base.InvokeAsync(this.onBeginSignOutDelegate, new object[] {
                        user}, this.onEndSignOutDelegate, this.onSignOutCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EveWindowsPhone.RelayServiceReference.IEveAPIService.BeginGetAvailableClients(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAvailableClients(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<EveWindowsPhone.RelayServiceReference.ServiceClient> EveWindowsPhone.RelayServiceReference.IEveAPIService.EndGetAvailableClients(System.IAsyncResult result) {
            return base.Channel.EndGetAvailableClients(result);
        }
        
        private System.IAsyncResult OnBeginGetAvailableClients(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((EveWindowsPhone.RelayServiceReference.IEveAPIService)(this)).BeginGetAvailableClients(callback, asyncState);
        }
        
        private object[] OnEndGetAvailableClients(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<EveWindowsPhone.RelayServiceReference.ServiceClient> retVal = ((EveWindowsPhone.RelayServiceReference.IEveAPIService)(this)).EndGetAvailableClients(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAvailableClientsCompleted(object state) {
            if ((this.GetAvailableClientsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAvailableClientsCompleted(this, new GetAvailableClientsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAvailableClientsAsync() {
            this.GetAvailableClientsAsync(null);
        }
        
        public void GetAvailableClientsAsync(object userState) {
            if ((this.onBeginGetAvailableClientsDelegate == null)) {
                this.onBeginGetAvailableClientsDelegate = new BeginOperationDelegate(this.OnBeginGetAvailableClients);
            }
            if ((this.onEndGetAvailableClientsDelegate == null)) {
                this.onEndGetAvailableClientsDelegate = new EndOperationDelegate(this.OnEndGetAvailableClients);
            }
            if ((this.onGetAvailableClientsCompletedDelegate == null)) {
                this.onGetAvailableClientsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAvailableClientsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAvailableClientsDelegate, null, this.onEndGetAvailableClientsDelegate, this.onGetAvailableClientsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EveWindowsPhone.RelayServiceReference.IEveAPIService.BeginSendTrackPadMessage(EveWindowsPhone.RelayServiceReference.ServiceRequestDetails details, EveWindowsPhone.RelayServiceReference.TrackPadMessage message, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendTrackPadMessage(details, message, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool EveWindowsPhone.RelayServiceReference.IEveAPIService.EndSendTrackPadMessage(System.IAsyncResult result) {
            return base.Channel.EndSendTrackPadMessage(result);
        }
        
        private System.IAsyncResult OnBeginSendTrackPadMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            EveWindowsPhone.RelayServiceReference.ServiceRequestDetails details = ((EveWindowsPhone.RelayServiceReference.ServiceRequestDetails)(inValues[0]));
            EveWindowsPhone.RelayServiceReference.TrackPadMessage message = ((EveWindowsPhone.RelayServiceReference.TrackPadMessage)(inValues[1]));
            return ((EveWindowsPhone.RelayServiceReference.IEveAPIService)(this)).BeginSendTrackPadMessage(details, message, callback, asyncState);
        }
        
        private object[] OnEndSendTrackPadMessage(System.IAsyncResult result) {
            bool retVal = ((EveWindowsPhone.RelayServiceReference.IEveAPIService)(this)).EndSendTrackPadMessage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSendTrackPadMessageCompleted(object state) {
            if ((this.SendTrackPadMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendTrackPadMessageCompleted(this, new SendTrackPadMessageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendTrackPadMessageAsync(EveWindowsPhone.RelayServiceReference.ServiceRequestDetails details, EveWindowsPhone.RelayServiceReference.TrackPadMessage message) {
            this.SendTrackPadMessageAsync(details, message, null);
        }
        
        public void SendTrackPadMessageAsync(EveWindowsPhone.RelayServiceReference.ServiceRequestDetails details, EveWindowsPhone.RelayServiceReference.TrackPadMessage message, object userState) {
            if ((this.onBeginSendTrackPadMessageDelegate == null)) {
                this.onBeginSendTrackPadMessageDelegate = new BeginOperationDelegate(this.OnBeginSendTrackPadMessage);
            }
            if ((this.onEndSendTrackPadMessageDelegate == null)) {
                this.onEndSendTrackPadMessageDelegate = new EndOperationDelegate(this.OnEndSendTrackPadMessage);
            }
            if ((this.onSendTrackPadMessageCompletedDelegate == null)) {
                this.onSendTrackPadMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendTrackPadMessageCompleted);
            }
            base.InvokeAsync(this.onBeginSendTrackPadMessageDelegate, new object[] {
                        details,
                        message}, this.onEndSendTrackPadMessageDelegate, this.onSendTrackPadMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EveWindowsPhone.RelayServiceReference.IEveAPIService.BeginSendButtonMessage(EveWindowsPhone.RelayServiceReference.ServiceRequestDetails details, EveWindowsPhone.RelayServiceReference.ButtonMessage message, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendButtonMessage(details, message, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool EveWindowsPhone.RelayServiceReference.IEveAPIService.EndSendButtonMessage(System.IAsyncResult result) {
            return base.Channel.EndSendButtonMessage(result);
        }
        
        private System.IAsyncResult OnBeginSendButtonMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            EveWindowsPhone.RelayServiceReference.ServiceRequestDetails details = ((EveWindowsPhone.RelayServiceReference.ServiceRequestDetails)(inValues[0]));
            EveWindowsPhone.RelayServiceReference.ButtonMessage message = ((EveWindowsPhone.RelayServiceReference.ButtonMessage)(inValues[1]));
            return ((EveWindowsPhone.RelayServiceReference.IEveAPIService)(this)).BeginSendButtonMessage(details, message, callback, asyncState);
        }
        
        private object[] OnEndSendButtonMessage(System.IAsyncResult result) {
            bool retVal = ((EveWindowsPhone.RelayServiceReference.IEveAPIService)(this)).EndSendButtonMessage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSendButtonMessageCompleted(object state) {
            if ((this.SendButtonMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendButtonMessageCompleted(this, new SendButtonMessageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendButtonMessageAsync(EveWindowsPhone.RelayServiceReference.ServiceRequestDetails details, EveWindowsPhone.RelayServiceReference.ButtonMessage message) {
            this.SendButtonMessageAsync(details, message, null);
        }
        
        public void SendButtonMessageAsync(EveWindowsPhone.RelayServiceReference.ServiceRequestDetails details, EveWindowsPhone.RelayServiceReference.ButtonMessage message, object userState) {
            if ((this.onBeginSendButtonMessageDelegate == null)) {
                this.onBeginSendButtonMessageDelegate = new BeginOperationDelegate(this.OnBeginSendButtonMessage);
            }
            if ((this.onEndSendButtonMessageDelegate == null)) {
                this.onEndSendButtonMessageDelegate = new EndOperationDelegate(this.OnEndSendButtonMessage);
            }
            if ((this.onSendButtonMessageCompletedDelegate == null)) {
                this.onSendButtonMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendButtonMessageCompleted);
            }
            base.InvokeAsync(this.onBeginSendButtonMessageDelegate, new object[] {
                        details,
                        message}, this.onEndSendButtonMessageDelegate, this.onSendButtonMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EveWindowsPhone.RelayServiceReference.IEveAPIService.BeginSetZoom(EveWindowsPhone.RelayServiceReference.ServiceRequestDetails details, int zoomValue, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetZoom(details, zoomValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool EveWindowsPhone.RelayServiceReference.IEveAPIService.EndSetZoom(System.IAsyncResult result) {
            return base.Channel.EndSetZoom(result);
        }
        
        private System.IAsyncResult OnBeginSetZoom(object[] inValues, System.AsyncCallback callback, object asyncState) {
            EveWindowsPhone.RelayServiceReference.ServiceRequestDetails details = ((EveWindowsPhone.RelayServiceReference.ServiceRequestDetails)(inValues[0]));
            int zoomValue = ((int)(inValues[1]));
            return ((EveWindowsPhone.RelayServiceReference.IEveAPIService)(this)).BeginSetZoom(details, zoomValue, callback, asyncState);
        }
        
        private object[] OnEndSetZoom(System.IAsyncResult result) {
            bool retVal = ((EveWindowsPhone.RelayServiceReference.IEveAPIService)(this)).EndSetZoom(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetZoomCompleted(object state) {
            if ((this.SetZoomCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetZoomCompleted(this, new SetZoomCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetZoomAsync(EveWindowsPhone.RelayServiceReference.ServiceRequestDetails details, int zoomValue) {
            this.SetZoomAsync(details, zoomValue, null);
        }
        
        public void SetZoomAsync(EveWindowsPhone.RelayServiceReference.ServiceRequestDetails details, int zoomValue, object userState) {
            if ((this.onBeginSetZoomDelegate == null)) {
                this.onBeginSetZoomDelegate = new BeginOperationDelegate(this.OnBeginSetZoom);
            }
            if ((this.onEndSetZoomDelegate == null)) {
                this.onEndSetZoomDelegate = new EndOperationDelegate(this.OnEndSetZoom);
            }
            if ((this.onSetZoomCompletedDelegate == null)) {
                this.onSetZoomCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetZoomCompleted);
            }
            base.InvokeAsync(this.onBeginSetZoomDelegate, new object[] {
                        details,
                        zoomValue}, this.onEndSetZoomDelegate, this.onSetZoomCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override EveWindowsPhone.RelayServiceReference.IEveAPIService CreateChannel() {
            return new EveAPIServiceClientChannel(this);
        }
        
        private class EveAPIServiceClientChannel : ChannelBase<EveWindowsPhone.RelayServiceReference.IEveAPIService>, EveWindowsPhone.RelayServiceReference.IEveAPIService {
            
            public EveAPIServiceClientChannel(System.ServiceModel.ClientBase<EveWindowsPhone.RelayServiceReference.IEveAPIService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginSignIn(EveWindowsPhone.RelayServiceReference.ServiceUser user, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = user;
                System.IAsyncResult _result = base.BeginInvoke("SignIn", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndSignIn(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("SignIn", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSignOut(EveWindowsPhone.RelayServiceReference.ServiceUser user, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = user;
                System.IAsyncResult _result = base.BeginInvoke("SignOut", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndSignOut(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("SignOut", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAvailableClients(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAvailableClients", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<EveWindowsPhone.RelayServiceReference.ServiceClient> EndGetAvailableClients(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<EveWindowsPhone.RelayServiceReference.ServiceClient> _result = ((System.Collections.ObjectModel.ObservableCollection<EveWindowsPhone.RelayServiceReference.ServiceClient>)(base.EndInvoke("GetAvailableClients", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSendTrackPadMessage(EveWindowsPhone.RelayServiceReference.ServiceRequestDetails details, EveWindowsPhone.RelayServiceReference.TrackPadMessage message, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = details;
                _args[1] = message;
                System.IAsyncResult _result = base.BeginInvoke("SendTrackPadMessage", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndSendTrackPadMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("SendTrackPadMessage", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSendButtonMessage(EveWindowsPhone.RelayServiceReference.ServiceRequestDetails details, EveWindowsPhone.RelayServiceReference.ButtonMessage message, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = details;
                _args[1] = message;
                System.IAsyncResult _result = base.BeginInvoke("SendButtonMessage", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndSendButtonMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("SendButtonMessage", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSetZoom(EveWindowsPhone.RelayServiceReference.ServiceRequestDetails details, int zoomValue, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = details;
                _args[1] = zoomValue;
                System.IAsyncResult _result = base.BeginInvoke("SetZoom", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndSetZoom(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("SetZoom", _args, result)));
                return _result;
            }
        }
    }
}
