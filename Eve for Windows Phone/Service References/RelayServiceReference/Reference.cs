//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace EveWindowsPhone.RelayServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RelayServiceReference.IEveAPIService")]
    public interface IEveAPIService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITouchService/SendTrackPadMessage", ReplyAction="http://tempuri.org/ITouchService/SendTrackPadMessageResponse")]
        System.IAsyncResult BeginSendTrackPadMessage(Eve.API.Services.Contracts.Services.ServiceRequestDetails details, Eve.API.Services.Contracts.TrackPadMessage message, System.AsyncCallback callback, object asyncState);
        
        bool EndSendTrackPadMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITouchService/SendButtonMessage", ReplyAction="http://tempuri.org/ITouchService/SendButtonMessageResponse")]
        System.IAsyncResult BeginSendButtonMessage(Eve.API.Services.Contracts.Services.ServiceRequestDetails details, Eve.API.Services.Contracts.ButtonMessage message, System.AsyncCallback callback, object asyncState);
        
        bool EndSendButtonMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEveAPIService/Ping", ReplyAction="http://tempuri.org/IEveAPIService/PingResponse")]
        System.IAsyncResult BeginPing(string yourName, System.AsyncCallback callback, object asyncState);
        
        string EndPing(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEveAPIService/SignIn", ReplyAction="http://tempuri.org/IEveAPIService/SignInResponse")]
        System.IAsyncResult BeginSignIn(Eve.API.Services.Contracts.Services.ServiceUser user, System.AsyncCallback callback, object asyncState);
        
        bool EndSignIn(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEveAPIService/SignOut", ReplyAction="http://tempuri.org/IEveAPIService/SignOutResponse")]
        System.IAsyncResult BeginSignOut(Eve.API.Services.Contracts.Services.ServiceUser user, System.AsyncCallback callback, object asyncState);
        
        bool EndSignOut(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEveAPIService/GetClientState", ReplyAction="http://tempuri.org/IEveAPIService/GetClientStateResponse")]
        System.IAsyncResult BeginGetClientState(System.AsyncCallback callback, object asyncState);
        
        Eve.API.Services.Contracts.Services.ClientState EndGetClientState(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEveAPIService/GetAvailableClients", ReplyAction="http://tempuri.org/IEveAPIService/GetAvailableClientsResponse")]
        System.IAsyncResult BeginGetAvailableClients(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Eve.API.Services.Contracts.Services.ServiceClient> EndGetAvailableClients(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEveAPIServiceChannel : EveWindowsPhone.RelayServiceReference.IEveAPIService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SendTrackPadMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SendTrackPadMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SendButtonMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SendButtonMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SignInCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SignInCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SignOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SignOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetClientStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetClientStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Eve.API.Services.Contracts.Services.ClientState Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Eve.API.Services.Contracts.Services.ClientState)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAvailableClientsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAvailableClientsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Eve.API.Services.Contracts.Services.ServiceClient> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Eve.API.Services.Contracts.Services.ServiceClient>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EveAPIServiceClient : System.ServiceModel.ClientBase<EveWindowsPhone.RelayServiceReference.IEveAPIService>, EveWindowsPhone.RelayServiceReference.IEveAPIService {
        
        private BeginOperationDelegate onBeginSendTrackPadMessageDelegate;
        
        private EndOperationDelegate onEndSendTrackPadMessageDelegate;
        
        private System.Threading.SendOrPostCallback onSendTrackPadMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendButtonMessageDelegate;
        
        private EndOperationDelegate onEndSendButtonMessageDelegate;
        
        private System.Threading.SendOrPostCallback onSendButtonMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginPingDelegate;
        
        private EndOperationDelegate onEndPingDelegate;
        
        private System.Threading.SendOrPostCallback onPingCompletedDelegate;
        
        private BeginOperationDelegate onBeginSignInDelegate;
        
        private EndOperationDelegate onEndSignInDelegate;
        
        private System.Threading.SendOrPostCallback onSignInCompletedDelegate;
        
        private BeginOperationDelegate onBeginSignOutDelegate;
        
        private EndOperationDelegate onEndSignOutDelegate;
        
        private System.Threading.SendOrPostCallback onSignOutCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetClientStateDelegate;
        
        private EndOperationDelegate onEndGetClientStateDelegate;
        
        private System.Threading.SendOrPostCallback onGetClientStateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAvailableClientsDelegate;
        
        private EndOperationDelegate onEndGetAvailableClientsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAvailableClientsCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public EveAPIServiceClient() {
        }
        
        public EveAPIServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EveAPIServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EveAPIServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EveAPIServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<SendTrackPadMessageCompletedEventArgs> SendTrackPadMessageCompleted;
        
        public event System.EventHandler<SendButtonMessageCompletedEventArgs> SendButtonMessageCompleted;
        
        public event System.EventHandler<PingCompletedEventArgs> PingCompleted;
        
        public event System.EventHandler<SignInCompletedEventArgs> SignInCompleted;
        
        public event System.EventHandler<SignOutCompletedEventArgs> SignOutCompleted;
        
        public event System.EventHandler<GetClientStateCompletedEventArgs> GetClientStateCompleted;
        
        public event System.EventHandler<GetAvailableClientsCompletedEventArgs> GetAvailableClientsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EveWindowsPhone.RelayServiceReference.IEveAPIService.BeginSendTrackPadMessage(Eve.API.Services.Contracts.Services.ServiceRequestDetails details, Eve.API.Services.Contracts.TrackPadMessage message, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendTrackPadMessage(details, message, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool EveWindowsPhone.RelayServiceReference.IEveAPIService.EndSendTrackPadMessage(System.IAsyncResult result) {
            return base.Channel.EndSendTrackPadMessage(result);
        }
        
        private System.IAsyncResult OnBeginSendTrackPadMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Eve.API.Services.Contracts.Services.ServiceRequestDetails details = ((Eve.API.Services.Contracts.Services.ServiceRequestDetails)(inValues[0]));
            Eve.API.Services.Contracts.TrackPadMessage message = ((Eve.API.Services.Contracts.TrackPadMessage)(inValues[1]));
            return ((EveWindowsPhone.RelayServiceReference.IEveAPIService)(this)).BeginSendTrackPadMessage(details, message, callback, asyncState);
        }
        
        private object[] OnEndSendTrackPadMessage(System.IAsyncResult result) {
            bool retVal = ((EveWindowsPhone.RelayServiceReference.IEveAPIService)(this)).EndSendTrackPadMessage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSendTrackPadMessageCompleted(object state) {
            if ((this.SendTrackPadMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendTrackPadMessageCompleted(this, new SendTrackPadMessageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendTrackPadMessageAsync(Eve.API.Services.Contracts.Services.ServiceRequestDetails details, Eve.API.Services.Contracts.TrackPadMessage message) {
            this.SendTrackPadMessageAsync(details, message, null);
        }
        
        public void SendTrackPadMessageAsync(Eve.API.Services.Contracts.Services.ServiceRequestDetails details, Eve.API.Services.Contracts.TrackPadMessage message, object userState) {
            if ((this.onBeginSendTrackPadMessageDelegate == null)) {
                this.onBeginSendTrackPadMessageDelegate = new BeginOperationDelegate(this.OnBeginSendTrackPadMessage);
            }
            if ((this.onEndSendTrackPadMessageDelegate == null)) {
                this.onEndSendTrackPadMessageDelegate = new EndOperationDelegate(this.OnEndSendTrackPadMessage);
            }
            if ((this.onSendTrackPadMessageCompletedDelegate == null)) {
                this.onSendTrackPadMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendTrackPadMessageCompleted);
            }
            base.InvokeAsync(this.onBeginSendTrackPadMessageDelegate, new object[] {
                        details,
                        message}, this.onEndSendTrackPadMessageDelegate, this.onSendTrackPadMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EveWindowsPhone.RelayServiceReference.IEveAPIService.BeginSendButtonMessage(Eve.API.Services.Contracts.Services.ServiceRequestDetails details, Eve.API.Services.Contracts.ButtonMessage message, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendButtonMessage(details, message, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool EveWindowsPhone.RelayServiceReference.IEveAPIService.EndSendButtonMessage(System.IAsyncResult result) {
            return base.Channel.EndSendButtonMessage(result);
        }
        
        private System.IAsyncResult OnBeginSendButtonMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Eve.API.Services.Contracts.Services.ServiceRequestDetails details = ((Eve.API.Services.Contracts.Services.ServiceRequestDetails)(inValues[0]));
            Eve.API.Services.Contracts.ButtonMessage message = ((Eve.API.Services.Contracts.ButtonMessage)(inValues[1]));
            return ((EveWindowsPhone.RelayServiceReference.IEveAPIService)(this)).BeginSendButtonMessage(details, message, callback, asyncState);
        }
        
        private object[] OnEndSendButtonMessage(System.IAsyncResult result) {
            bool retVal = ((EveWindowsPhone.RelayServiceReference.IEveAPIService)(this)).EndSendButtonMessage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSendButtonMessageCompleted(object state) {
            if ((this.SendButtonMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendButtonMessageCompleted(this, new SendButtonMessageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendButtonMessageAsync(Eve.API.Services.Contracts.Services.ServiceRequestDetails details, Eve.API.Services.Contracts.ButtonMessage message) {
            this.SendButtonMessageAsync(details, message, null);
        }
        
        public void SendButtonMessageAsync(Eve.API.Services.Contracts.Services.ServiceRequestDetails details, Eve.API.Services.Contracts.ButtonMessage message, object userState) {
            if ((this.onBeginSendButtonMessageDelegate == null)) {
                this.onBeginSendButtonMessageDelegate = new BeginOperationDelegate(this.OnBeginSendButtonMessage);
            }
            if ((this.onEndSendButtonMessageDelegate == null)) {
                this.onEndSendButtonMessageDelegate = new EndOperationDelegate(this.OnEndSendButtonMessage);
            }
            if ((this.onSendButtonMessageCompletedDelegate == null)) {
                this.onSendButtonMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendButtonMessageCompleted);
            }
            base.InvokeAsync(this.onBeginSendButtonMessageDelegate, new object[] {
                        details,
                        message}, this.onEndSendButtonMessageDelegate, this.onSendButtonMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EveWindowsPhone.RelayServiceReference.IEveAPIService.BeginPing(string yourName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPing(yourName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string EveWindowsPhone.RelayServiceReference.IEveAPIService.EndPing(System.IAsyncResult result) {
            return base.Channel.EndPing(result);
        }
        
        private System.IAsyncResult OnBeginPing(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string yourName = ((string)(inValues[0]));
            return ((EveWindowsPhone.RelayServiceReference.IEveAPIService)(this)).BeginPing(yourName, callback, asyncState);
        }
        
        private object[] OnEndPing(System.IAsyncResult result) {
            string retVal = ((EveWindowsPhone.RelayServiceReference.IEveAPIService)(this)).EndPing(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPingCompleted(object state) {
            if ((this.PingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PingCompleted(this, new PingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PingAsync(string yourName) {
            this.PingAsync(yourName, null);
        }
        
        public void PingAsync(string yourName, object userState) {
            if ((this.onBeginPingDelegate == null)) {
                this.onBeginPingDelegate = new BeginOperationDelegate(this.OnBeginPing);
            }
            if ((this.onEndPingDelegate == null)) {
                this.onEndPingDelegate = new EndOperationDelegate(this.OnEndPing);
            }
            if ((this.onPingCompletedDelegate == null)) {
                this.onPingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPingCompleted);
            }
            base.InvokeAsync(this.onBeginPingDelegate, new object[] {
                        yourName}, this.onEndPingDelegate, this.onPingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EveWindowsPhone.RelayServiceReference.IEveAPIService.BeginSignIn(Eve.API.Services.Contracts.Services.ServiceUser user, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSignIn(user, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool EveWindowsPhone.RelayServiceReference.IEveAPIService.EndSignIn(System.IAsyncResult result) {
            return base.Channel.EndSignIn(result);
        }
        
        private System.IAsyncResult OnBeginSignIn(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Eve.API.Services.Contracts.Services.ServiceUser user = ((Eve.API.Services.Contracts.Services.ServiceUser)(inValues[0]));
            return ((EveWindowsPhone.RelayServiceReference.IEveAPIService)(this)).BeginSignIn(user, callback, asyncState);
        }
        
        private object[] OnEndSignIn(System.IAsyncResult result) {
            bool retVal = ((EveWindowsPhone.RelayServiceReference.IEveAPIService)(this)).EndSignIn(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSignInCompleted(object state) {
            if ((this.SignInCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SignInCompleted(this, new SignInCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SignInAsync(Eve.API.Services.Contracts.Services.ServiceUser user) {
            this.SignInAsync(user, null);
        }
        
        public void SignInAsync(Eve.API.Services.Contracts.Services.ServiceUser user, object userState) {
            if ((this.onBeginSignInDelegate == null)) {
                this.onBeginSignInDelegate = new BeginOperationDelegate(this.OnBeginSignIn);
            }
            if ((this.onEndSignInDelegate == null)) {
                this.onEndSignInDelegate = new EndOperationDelegate(this.OnEndSignIn);
            }
            if ((this.onSignInCompletedDelegate == null)) {
                this.onSignInCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSignInCompleted);
            }
            base.InvokeAsync(this.onBeginSignInDelegate, new object[] {
                        user}, this.onEndSignInDelegate, this.onSignInCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EveWindowsPhone.RelayServiceReference.IEveAPIService.BeginSignOut(Eve.API.Services.Contracts.Services.ServiceUser user, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSignOut(user, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool EveWindowsPhone.RelayServiceReference.IEveAPIService.EndSignOut(System.IAsyncResult result) {
            return base.Channel.EndSignOut(result);
        }
        
        private System.IAsyncResult OnBeginSignOut(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Eve.API.Services.Contracts.Services.ServiceUser user = ((Eve.API.Services.Contracts.Services.ServiceUser)(inValues[0]));
            return ((EveWindowsPhone.RelayServiceReference.IEveAPIService)(this)).BeginSignOut(user, callback, asyncState);
        }
        
        private object[] OnEndSignOut(System.IAsyncResult result) {
            bool retVal = ((EveWindowsPhone.RelayServiceReference.IEveAPIService)(this)).EndSignOut(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSignOutCompleted(object state) {
            if ((this.SignOutCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SignOutCompleted(this, new SignOutCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SignOutAsync(Eve.API.Services.Contracts.Services.ServiceUser user) {
            this.SignOutAsync(user, null);
        }
        
        public void SignOutAsync(Eve.API.Services.Contracts.Services.ServiceUser user, object userState) {
            if ((this.onBeginSignOutDelegate == null)) {
                this.onBeginSignOutDelegate = new BeginOperationDelegate(this.OnBeginSignOut);
            }
            if ((this.onEndSignOutDelegate == null)) {
                this.onEndSignOutDelegate = new EndOperationDelegate(this.OnEndSignOut);
            }
            if ((this.onSignOutCompletedDelegate == null)) {
                this.onSignOutCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSignOutCompleted);
            }
            base.InvokeAsync(this.onBeginSignOutDelegate, new object[] {
                        user}, this.onEndSignOutDelegate, this.onSignOutCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EveWindowsPhone.RelayServiceReference.IEveAPIService.BeginGetClientState(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetClientState(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Eve.API.Services.Contracts.Services.ClientState EveWindowsPhone.RelayServiceReference.IEveAPIService.EndGetClientState(System.IAsyncResult result) {
            return base.Channel.EndGetClientState(result);
        }
        
        private System.IAsyncResult OnBeginGetClientState(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((EveWindowsPhone.RelayServiceReference.IEveAPIService)(this)).BeginGetClientState(callback, asyncState);
        }
        
        private object[] OnEndGetClientState(System.IAsyncResult result) {
            Eve.API.Services.Contracts.Services.ClientState retVal = ((EveWindowsPhone.RelayServiceReference.IEveAPIService)(this)).EndGetClientState(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetClientStateCompleted(object state) {
            if ((this.GetClientStateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetClientStateCompleted(this, new GetClientStateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetClientStateAsync() {
            this.GetClientStateAsync(null);
        }
        
        public void GetClientStateAsync(object userState) {
            if ((this.onBeginGetClientStateDelegate == null)) {
                this.onBeginGetClientStateDelegate = new BeginOperationDelegate(this.OnBeginGetClientState);
            }
            if ((this.onEndGetClientStateDelegate == null)) {
                this.onEndGetClientStateDelegate = new EndOperationDelegate(this.OnEndGetClientState);
            }
            if ((this.onGetClientStateCompletedDelegate == null)) {
                this.onGetClientStateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetClientStateCompleted);
            }
            base.InvokeAsync(this.onBeginGetClientStateDelegate, null, this.onEndGetClientStateDelegate, this.onGetClientStateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EveWindowsPhone.RelayServiceReference.IEveAPIService.BeginGetAvailableClients(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAvailableClients(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Eve.API.Services.Contracts.Services.ServiceClient> EveWindowsPhone.RelayServiceReference.IEveAPIService.EndGetAvailableClients(System.IAsyncResult result) {
            return base.Channel.EndGetAvailableClients(result);
        }
        
        private System.IAsyncResult OnBeginGetAvailableClients(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((EveWindowsPhone.RelayServiceReference.IEveAPIService)(this)).BeginGetAvailableClients(callback, asyncState);
        }
        
        private object[] OnEndGetAvailableClients(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Eve.API.Services.Contracts.Services.ServiceClient> retVal = ((EveWindowsPhone.RelayServiceReference.IEveAPIService)(this)).EndGetAvailableClients(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAvailableClientsCompleted(object state) {
            if ((this.GetAvailableClientsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAvailableClientsCompleted(this, new GetAvailableClientsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAvailableClientsAsync() {
            this.GetAvailableClientsAsync(null);
        }
        
        public void GetAvailableClientsAsync(object userState) {
            if ((this.onBeginGetAvailableClientsDelegate == null)) {
                this.onBeginGetAvailableClientsDelegate = new BeginOperationDelegate(this.OnBeginGetAvailableClients);
            }
            if ((this.onEndGetAvailableClientsDelegate == null)) {
                this.onEndGetAvailableClientsDelegate = new EndOperationDelegate(this.OnEndGetAvailableClients);
            }
            if ((this.onGetAvailableClientsCompletedDelegate == null)) {
                this.onGetAvailableClientsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAvailableClientsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAvailableClientsDelegate, null, this.onEndGetAvailableClientsDelegate, this.onGetAvailableClientsCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override EveWindowsPhone.RelayServiceReference.IEveAPIService CreateChannel() {
            return new EveAPIServiceClientChannel(this);
        }
        
        private class EveAPIServiceClientChannel : ChannelBase<EveWindowsPhone.RelayServiceReference.IEveAPIService>, EveWindowsPhone.RelayServiceReference.IEveAPIService {
            
            public EveAPIServiceClientChannel(System.ServiceModel.ClientBase<EveWindowsPhone.RelayServiceReference.IEveAPIService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginSendTrackPadMessage(Eve.API.Services.Contracts.Services.ServiceRequestDetails details, Eve.API.Services.Contracts.TrackPadMessage message, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = details;
                _args[1] = message;
                System.IAsyncResult _result = base.BeginInvoke("SendTrackPadMessage", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndSendTrackPadMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("SendTrackPadMessage", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSendButtonMessage(Eve.API.Services.Contracts.Services.ServiceRequestDetails details, Eve.API.Services.Contracts.ButtonMessage message, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = details;
                _args[1] = message;
                System.IAsyncResult _result = base.BeginInvoke("SendButtonMessage", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndSendButtonMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("SendButtonMessage", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPing(string yourName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = yourName;
                System.IAsyncResult _result = base.BeginInvoke("Ping", _args, callback, asyncState);
                return _result;
            }
            
            public string EndPing(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("Ping", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSignIn(Eve.API.Services.Contracts.Services.ServiceUser user, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = user;
                System.IAsyncResult _result = base.BeginInvoke("SignIn", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndSignIn(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("SignIn", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSignOut(Eve.API.Services.Contracts.Services.ServiceUser user, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = user;
                System.IAsyncResult _result = base.BeginInvoke("SignOut", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndSignOut(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("SignOut", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetClientState(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetClientState", _args, callback, asyncState);
                return _result;
            }
            
            public Eve.API.Services.Contracts.Services.ClientState EndGetClientState(System.IAsyncResult result) {
                object[] _args = new object[0];
                Eve.API.Services.Contracts.Services.ClientState _result = ((Eve.API.Services.Contracts.Services.ClientState)(base.EndInvoke("GetClientState", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAvailableClients(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAvailableClients", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Eve.API.Services.Contracts.Services.ServiceClient> EndGetAvailableClients(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Eve.API.Services.Contracts.Services.ServiceClient> _result = ((System.Collections.ObjectModel.ObservableCollection<Eve.API.Services.Contracts.Services.ServiceClient>)(base.EndInvoke("GetAvailableClients", _args, result)));
                return _result;
            }
        }
    }
}
