//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace EveWindowsPhone.TouchServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TouchServiceReference.ITouchService")]
    public interface ITouchService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITouchService/ProcessTrackPadMessage", ReplyAction="http://tempuri.org/ITouchService/ProcessTrackPadMessageResponse")]
        System.IAsyncResult BeginProcessTrackPadMessage(string token, Eve.API.Services.Common.TrackPadMessage message, System.AsyncCallback callback, object asyncState);
        
        bool EndProcessTrackPadMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITouchService/ProcessButtonMessage", ReplyAction="http://tempuri.org/ITouchService/ProcessButtonMessageResponse")]
        System.IAsyncResult BeginProcessButtonMessage(string token, Eve.API.Services.Common.ButtonMessage message, System.AsyncCallback callback, object asyncState);
        
        bool EndProcessButtonMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITouchService/SignIn", ReplyAction="http://tempuri.org/ITouchService/SignInResponse")]
        System.IAsyncResult BeginSignIn(string userName, string passwordHash, System.AsyncCallback callback, object asyncState);
        
        string EndSignIn(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITouchService/SignOut", ReplyAction="http://tempuri.org/ITouchService/SignOutResponse")]
        System.IAsyncResult BeginSignOut(string token, System.AsyncCallback callback, object asyncState);
        
        void EndSignOut(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITouchServiceChannel : EveWindowsPhone.TouchServiceReference.ITouchService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProcessTrackPadMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ProcessTrackPadMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProcessButtonMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ProcessButtonMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SignInCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SignInCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TouchServiceClient : System.ServiceModel.ClientBase<EveWindowsPhone.TouchServiceReference.ITouchService>, EveWindowsPhone.TouchServiceReference.ITouchService {
        
        private BeginOperationDelegate onBeginProcessTrackPadMessageDelegate;
        
        private EndOperationDelegate onEndProcessTrackPadMessageDelegate;
        
        private System.Threading.SendOrPostCallback onProcessTrackPadMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginProcessButtonMessageDelegate;
        
        private EndOperationDelegate onEndProcessButtonMessageDelegate;
        
        private System.Threading.SendOrPostCallback onProcessButtonMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginSignInDelegate;
        
        private EndOperationDelegate onEndSignInDelegate;
        
        private System.Threading.SendOrPostCallback onSignInCompletedDelegate;
        
        private BeginOperationDelegate onBeginSignOutDelegate;
        
        private EndOperationDelegate onEndSignOutDelegate;
        
        private System.Threading.SendOrPostCallback onSignOutCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public TouchServiceClient() {
        }
        
        public TouchServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TouchServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TouchServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TouchServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<ProcessTrackPadMessageCompletedEventArgs> ProcessTrackPadMessageCompleted;
        
        public event System.EventHandler<ProcessButtonMessageCompletedEventArgs> ProcessButtonMessageCompleted;
        
        public event System.EventHandler<SignInCompletedEventArgs> SignInCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SignOutCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EveWindowsPhone.TouchServiceReference.ITouchService.BeginProcessTrackPadMessage(string token, Eve.API.Services.Common.TrackPadMessage message, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginProcessTrackPadMessage(token, message, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool EveWindowsPhone.TouchServiceReference.ITouchService.EndProcessTrackPadMessage(System.IAsyncResult result) {
            return base.Channel.EndProcessTrackPadMessage(result);
        }
        
        private System.IAsyncResult OnBeginProcessTrackPadMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Eve.API.Services.Common.TrackPadMessage message = ((Eve.API.Services.Common.TrackPadMessage)(inValues[1]));
            return ((EveWindowsPhone.TouchServiceReference.ITouchService)(this)).BeginProcessTrackPadMessage(token, message, callback, asyncState);
        }
        
        private object[] OnEndProcessTrackPadMessage(System.IAsyncResult result) {
            bool retVal = ((EveWindowsPhone.TouchServiceReference.ITouchService)(this)).EndProcessTrackPadMessage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnProcessTrackPadMessageCompleted(object state) {
            if ((this.ProcessTrackPadMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ProcessTrackPadMessageCompleted(this, new ProcessTrackPadMessageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ProcessTrackPadMessageAsync(string token, Eve.API.Services.Common.TrackPadMessage message) {
            this.ProcessTrackPadMessageAsync(token, message, null);
        }
        
        public void ProcessTrackPadMessageAsync(string token, Eve.API.Services.Common.TrackPadMessage message, object userState) {
            if ((this.onBeginProcessTrackPadMessageDelegate == null)) {
                this.onBeginProcessTrackPadMessageDelegate = new BeginOperationDelegate(this.OnBeginProcessTrackPadMessage);
            }
            if ((this.onEndProcessTrackPadMessageDelegate == null)) {
                this.onEndProcessTrackPadMessageDelegate = new EndOperationDelegate(this.OnEndProcessTrackPadMessage);
            }
            if ((this.onProcessTrackPadMessageCompletedDelegate == null)) {
                this.onProcessTrackPadMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnProcessTrackPadMessageCompleted);
            }
            base.InvokeAsync(this.onBeginProcessTrackPadMessageDelegate, new object[] {
                        token,
                        message}, this.onEndProcessTrackPadMessageDelegate, this.onProcessTrackPadMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EveWindowsPhone.TouchServiceReference.ITouchService.BeginProcessButtonMessage(string token, Eve.API.Services.Common.ButtonMessage message, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginProcessButtonMessage(token, message, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool EveWindowsPhone.TouchServiceReference.ITouchService.EndProcessButtonMessage(System.IAsyncResult result) {
            return base.Channel.EndProcessButtonMessage(result);
        }
        
        private System.IAsyncResult OnBeginProcessButtonMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            Eve.API.Services.Common.ButtonMessage message = ((Eve.API.Services.Common.ButtonMessage)(inValues[1]));
            return ((EveWindowsPhone.TouchServiceReference.ITouchService)(this)).BeginProcessButtonMessage(token, message, callback, asyncState);
        }
        
        private object[] OnEndProcessButtonMessage(System.IAsyncResult result) {
            bool retVal = ((EveWindowsPhone.TouchServiceReference.ITouchService)(this)).EndProcessButtonMessage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnProcessButtonMessageCompleted(object state) {
            if ((this.ProcessButtonMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ProcessButtonMessageCompleted(this, new ProcessButtonMessageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ProcessButtonMessageAsync(string token, Eve.API.Services.Common.ButtonMessage message) {
            this.ProcessButtonMessageAsync(token, message, null);
        }
        
        public void ProcessButtonMessageAsync(string token, Eve.API.Services.Common.ButtonMessage message, object userState) {
            if ((this.onBeginProcessButtonMessageDelegate == null)) {
                this.onBeginProcessButtonMessageDelegate = new BeginOperationDelegate(this.OnBeginProcessButtonMessage);
            }
            if ((this.onEndProcessButtonMessageDelegate == null)) {
                this.onEndProcessButtonMessageDelegate = new EndOperationDelegate(this.OnEndProcessButtonMessage);
            }
            if ((this.onProcessButtonMessageCompletedDelegate == null)) {
                this.onProcessButtonMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnProcessButtonMessageCompleted);
            }
            base.InvokeAsync(this.onBeginProcessButtonMessageDelegate, new object[] {
                        token,
                        message}, this.onEndProcessButtonMessageDelegate, this.onProcessButtonMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EveWindowsPhone.TouchServiceReference.ITouchService.BeginSignIn(string userName, string passwordHash, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSignIn(userName, passwordHash, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string EveWindowsPhone.TouchServiceReference.ITouchService.EndSignIn(System.IAsyncResult result) {
            return base.Channel.EndSignIn(result);
        }
        
        private System.IAsyncResult OnBeginSignIn(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            string passwordHash = ((string)(inValues[1]));
            return ((EveWindowsPhone.TouchServiceReference.ITouchService)(this)).BeginSignIn(userName, passwordHash, callback, asyncState);
        }
        
        private object[] OnEndSignIn(System.IAsyncResult result) {
            string retVal = ((EveWindowsPhone.TouchServiceReference.ITouchService)(this)).EndSignIn(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSignInCompleted(object state) {
            if ((this.SignInCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SignInCompleted(this, new SignInCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SignInAsync(string userName, string passwordHash) {
            this.SignInAsync(userName, passwordHash, null);
        }
        
        public void SignInAsync(string userName, string passwordHash, object userState) {
            if ((this.onBeginSignInDelegate == null)) {
                this.onBeginSignInDelegate = new BeginOperationDelegate(this.OnBeginSignIn);
            }
            if ((this.onEndSignInDelegate == null)) {
                this.onEndSignInDelegate = new EndOperationDelegate(this.OnEndSignIn);
            }
            if ((this.onSignInCompletedDelegate == null)) {
                this.onSignInCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSignInCompleted);
            }
            base.InvokeAsync(this.onBeginSignInDelegate, new object[] {
                        userName,
                        passwordHash}, this.onEndSignInDelegate, this.onSignInCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EveWindowsPhone.TouchServiceReference.ITouchService.BeginSignOut(string token, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSignOut(token, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void EveWindowsPhone.TouchServiceReference.ITouchService.EndSignOut(System.IAsyncResult result) {
            base.Channel.EndSignOut(result);
        }
        
        private System.IAsyncResult OnBeginSignOut(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            return ((EveWindowsPhone.TouchServiceReference.ITouchService)(this)).BeginSignOut(token, callback, asyncState);
        }
        
        private object[] OnEndSignOut(System.IAsyncResult result) {
            ((EveWindowsPhone.TouchServiceReference.ITouchService)(this)).EndSignOut(result);
            return null;
        }
        
        private void OnSignOutCompleted(object state) {
            if ((this.SignOutCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SignOutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SignOutAsync(string token) {
            this.SignOutAsync(token, null);
        }
        
        public void SignOutAsync(string token, object userState) {
            if ((this.onBeginSignOutDelegate == null)) {
                this.onBeginSignOutDelegate = new BeginOperationDelegate(this.OnBeginSignOut);
            }
            if ((this.onEndSignOutDelegate == null)) {
                this.onEndSignOutDelegate = new EndOperationDelegate(this.OnEndSignOut);
            }
            if ((this.onSignOutCompletedDelegate == null)) {
                this.onSignOutCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSignOutCompleted);
            }
            base.InvokeAsync(this.onBeginSignOutDelegate, new object[] {
                        token}, this.onEndSignOutDelegate, this.onSignOutCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override EveWindowsPhone.TouchServiceReference.ITouchService CreateChannel() {
            return new TouchServiceClientChannel(this);
        }
        
        private class TouchServiceClientChannel : ChannelBase<EveWindowsPhone.TouchServiceReference.ITouchService>, EveWindowsPhone.TouchServiceReference.ITouchService {
            
            public TouchServiceClientChannel(System.ServiceModel.ClientBase<EveWindowsPhone.TouchServiceReference.ITouchService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginProcessTrackPadMessage(string token, Eve.API.Services.Common.TrackPadMessage message, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = message;
                System.IAsyncResult _result = base.BeginInvoke("ProcessTrackPadMessage", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndProcessTrackPadMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("ProcessTrackPadMessage", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginProcessButtonMessage(string token, Eve.API.Services.Common.ButtonMessage message, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = token;
                _args[1] = message;
                System.IAsyncResult _result = base.BeginInvoke("ProcessButtonMessage", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndProcessButtonMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("ProcessButtonMessage", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSignIn(string userName, string passwordHash, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userName;
                _args[1] = passwordHash;
                System.IAsyncResult _result = base.BeginInvoke("SignIn", _args, callback, asyncState);
                return _result;
            }
            
            public string EndSignIn(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("SignIn", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSignOut(string token, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = token;
                System.IAsyncResult _result = base.BeginInvoke("SignOut", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSignOut(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SignOut", _args, result);
            }
        }
    }
}
