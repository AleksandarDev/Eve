//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Eve.API.Services.TestConsole.TouchServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TouchServiceReference.ITouchService")]
    public interface ITouchService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITouchService/MoveMouse", ReplyAction="http://tempuri.org/ITouchService/MoveMouseResponse")]
        void MoveMouse(string token, int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITouchService/MoveMouse", ReplyAction="http://tempuri.org/ITouchService/MoveMouseResponse")]
        System.Threading.Tasks.Task MoveMouseAsync(string token, int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITouchService/SignIn", ReplyAction="http://tempuri.org/ITouchService/SignInResponse")]
        string SignIn(string userName, string passwordHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITouchService/SignIn", ReplyAction="http://tempuri.org/ITouchService/SignInResponse")]
        System.Threading.Tasks.Task<string> SignInAsync(string userName, string passwordHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITouchService/SignOut", ReplyAction="http://tempuri.org/ITouchService/SignOutResponse")]
        void SignOut(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITouchService/SignOut", ReplyAction="http://tempuri.org/ITouchService/SignOutResponse")]
        System.Threading.Tasks.Task SignOutAsync(string token);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITouchServiceChannel : Eve.API.Services.TestConsole.TouchServiceReference.ITouchService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TouchServiceClient : System.ServiceModel.ClientBase<Eve.API.Services.TestConsole.TouchServiceReference.ITouchService>, Eve.API.Services.TestConsole.TouchServiceReference.ITouchService {
        
        public TouchServiceClient() {
        }
        
        public TouchServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TouchServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TouchServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TouchServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void MoveMouse(string token, int x, int y) {
            base.Channel.MoveMouse(token, x, y);
        }
        
        public System.Threading.Tasks.Task MoveMouseAsync(string token, int x, int y) {
            return base.Channel.MoveMouseAsync(token, x, y);
        }
        
        public string SignIn(string userName, string passwordHash) {
            return base.Channel.SignIn(userName, passwordHash);
        }
        
        public System.Threading.Tasks.Task<string> SignInAsync(string userName, string passwordHash) {
            return base.Channel.SignInAsync(userName, passwordHash);
        }
        
        public void SignOut(string token) {
            base.Channel.SignOut(token);
        }
        
        public System.Threading.Tasks.Task SignOutAsync(string token) {
            return base.Channel.SignOutAsync(token);
        }
    }
}
